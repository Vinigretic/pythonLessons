# Задачи на циклы для освоения языка Python
# Вывести на экран циклом пять строк из нулей, причем каждая строка должна быть пронумерована;

# a = '000000000'
# for i in range(1, 6):
#     print(i, a)

# Найти сумму ряда чисел от 1 до 100. Полученный результат вывести на экран;
# b = 0
# for i in range(1, 101):
#     b += i
# print(b)


# Даны три числа. Вывести на экран «yes«, если среди них есть одинаковые, иначе вывести “ERROR”;
# a = 1
# b = 3
# c = 2
# if a == b or a == c:
#     print('yes')
# else:
#     print('error')
# Даны три числа. Вывести на экран «yes«, если можно взять какие-то два из них и в сумме получить третье;
# a = 1
# b = 3
# c = 2
# if a + b == c or a + c == b or b + c == a:
#     print('yes')
# else:
#     print('error')
# Дано три числа. Найти количество положительных чисел среди них;

# a = 1
# b = 1
# c = -2
# d = ''
# for i in a, b, c:
#     if i > 0:
#         d += str(i)
# print(len(d))
# Вывести на экран все чётные значения в диапазоне от 1 до 497;
# for i in range(1, 497):
#     if i % 2 == 0:
#         print(i, end=' ')
# Посчитать сумму числового ряда от 0 до 14 включительно. Например, 0+1+2+3+…+14;
# b = 0
# for i in range(0, 15):
#     b += i
# print(b)
# Перемножить все не чётные значения в диапазоне от 0 до 9435;
# b = 1
# for i in range(0, 10):
#     if i % 2 == 1:
#         b *= i
#         print(b)

# Записать в массив все числа в диапазоне от 54 до 9184 кратные 5;
# a = []
# for i in range(54, 9184):
#     if i % 5 == 0:
#         a.append(i)
# print(a)

# Задача 1
# Есть список a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89].
#
# Выведите все элементы, которые меньше 5.
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# for i in a:
#     if i < 5:
#         print(i, end= ' ')

# Задача 2
# Даны списки:
#
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
#
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].
#
# Нужно вернуть список, который состоит из элементов, общих для этих двух списков.
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
# c = []
# for i in a:
#     for j in b:
#         if i == j:
#             c.append(i)
# print(c)
# print([i for i in a for j in b if i == j])
# for i in a:
#     if i in b:
#         c.append(i)
# print(c)
# print([i for i in a if i in b])


# print(set(a).intersection(set(b))) # пересечение двух множеств

# Задача 3
# Отсортируйте словарь по значению в порядке возрастания и убывания.
# dirt = {
#     1: 'a',
#     2: 'b',
#     3: 'c'
# }

# print(sorted(dirt, key=dirt.get))
# print(sorted(dirt, key=dirt.get, reverse= True))

# Задача 4
# Напишите программу для слияния нескольких словарей в один.
# d = {}
# dict_a = {1:10, 2:20}
# dict_b = {3:30, 4:40}
# dict_c = {5:50, 6:60}
# for i in dict_a, dict_b, dict_c:
#     d.update(i)
# print(d)

# Задача 5
# Найдите три ключа с самыми высокими значениями
# в словаре my_dict = {'a':500, 'b':5874, 'c': 560,'d':400, 'e':5874, 'f': 20}.
# my_dict = {'a':500, 'b':5874, 'c': 560,'d':400, 'e':5874, 'f': 20}
# print(sorted(my_dict, key=my_dict.get)[-3:])


# Задача 6 !!!!!!!!! НУЖНЫ ОБЬЯСНЕНИя
# Напишите код, который переводит целое число в строку, при том что его можно применить в любой системе счисления.

# Второй аргумент функции int отвечает за указание основания системы счисления:

# print(int('ABC', 17))

# Задача 10
# Вы принимаете от пользователя последовательность чисел, разделённых запятой.
# Составьте список и кортеж с этими числами.
# a = input()
# b = a.split(',')
# c = tuple(a.split(','))
# print(b, c)

# Задача 11
# Выведите первый и последний элемент списка.

# a = ['1', '2', '3', '4', '3', '5', '6']
# print(a[0], a[-1])

# Задача 13
# При заданном целом числе n посчитайте n + nn + nnn.
# a = 5
# b = []
#
# for i in range(1, a + 1):
#     b.append(i ** i)
# print(b)

# Задача 14
# Напишите программу, которая выводит чётные числа из заданного списка и останавливается,
# если встречает число 237.
# a = [1, 2, 3, 4, 5, 237, 8, 10, 12]
# for i in a:
#     if i == 237:
#         break
#     if i % 2 == 0:
#         print(i)

# Задача 15
# Напишите программу, которая принимает два списка и выводит все элементы первого, которых нет во втором.
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
#
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
# for i in a:
#     if i not in b:
#         print(i)
#
# print(set(a).difference(set(b)))

# Задача 17
# Сложите цифры целого числа.
# a = 3235
# b = 0
# for i in str(a):
#     b += int(i)
# print(b)

# Задача 18
# Посчитайте, сколько раз символ встречается в строке.
# a = 'Сложите цифры целого числа'
# print(a.count('и'))

# Задача 19
# Поменяйте значения переменных местами.
# a = 5
# b = 4
# a, b = b, a

# Задача 21
# Нужно проверить, все ли числа в последовательности уникальны.

# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 12, 13]
# if len(set(b)) == len(b):
#     print('числа уникальны')
# else:
#     print('no')
# print('числа уникальны' if len(set(b)) == len(b) else 'no')

# Задача 22
# Напишите программу, которая принимает текст и выводит два слова: наиболее часто встречающееся и самое длинное.
# s = "У нас, который год, живёт кот которого Васькой зовут, отличный кот - мышелов, вот такой кот ".split()
# b = []
# c = []
# for i in s:
#     b.append(s.count(i))
#     c.append(len(i))
# print(b)
# print(c)
# print(b.index(max(b)))
# print(s[b.index(max(b))])
# print(c.index(max(c)))
# print(s[c.index(max(c))])

# for i in s:
#     b.append(s.count(i))
#     c.append(len(i))
# print(s[b.index(max(b))])
# print(s[c.index(max(c))])


# print(s[[s.count(i) for i in s].index(max([s.count(i) for i in s]))])
# print(s[[len(i) for i in s].index(max([len(i) for i in s]))])

# Времена года (4)
# Написать функцию season, принимающую 1 аргумент — номер месяца
# (от 1 до 12), и возвращающую время года, которому этот месяц принадлежит (зима, весна, лето или осень).
# a = int(input('номер месяца: '))
# if a < 3 or a == 12:
#     print('winter')
# elif 2 < a < 6:
#     print('spring')
# elif 5 < a < 9:
#     print('summer')
# else:
#     print('autumn')

# Банковский вклад (5)
# Пользователь делает вклад в размере a рублей сроком на years лет под 10% годовых
# (каждый год размер его вклада увеличивается на 10%.
# Эти деньги прибавляются к сумме вклада, и на них в следующем году тоже будут проценты).
#
# Написать функцию bank, принимающая аргументы a и years, и возвращающую сумму, которая будет на счету пользователя.

# a = 5000
# years = 5
# b = 0
# while True:
#     if b == years:
#         break
#     b = b + 1
#     a = a +(a / 10)
#     print(a)

# Простые числа (6)
# Написать функцию is_prime, принимающую 1 аргумент — число от 1 до 1000,
# и возвращающую True, если оно простое, и False - иначе.

# for i in range(1, 10):
#     for j in range(1, i + 1):
#         if i / j != 1:
#             print('false')
#         else:
#             print('true')

# На вход функция more_than_five(lst) получает список из целых чисел.
# Результатом работы функции должен стать новый список,
# в котором содержатся только те числа, которые больше 5 по модулю.
# a = [1, 2, 3, 4, 5, -6, 7, 8, -9, 10, 10, -12, 13]
# b = []
# for i in a:
#     if abs(i) > 5:
#         b.append(i)
# print(b)

# Евгению предоставили строку, состоящую из русских букв разных регистров, и попросили очистить ее от заглавных литер.
# Как ему показалось, он написал верный код, но результат совсем не порадовал.
# Ниже представлен пример работы «чистильщика строк», которому срочно требуется ваша помощь.
# letters = 'ЫгВЫоЯСремДШНККАыкЩЙФа'
# b = ''
#
# for i in letters:
#     if i.islower():
#         b += i
# print(b)

# Анна # решила # представить # некую # таблицу # с # заглавными # и # строчными # буквами # русского
# алфавита # в # красивом # формате. # Об # этом # ее # попросили # англоязычные # друзья
# из # социальных # сетей. ## Недолго # думая # девушка # создала # скрипт, который # выполнял
# подобную # операцию. # Результат # работы # программы# продемонстрирован # ниже.
# Сможете # повторить(в # строках # с # галочками - их # 27 # штук, чтобы # вам # не # пришлось
# долго # считать)? Для # идентичности # результатов # примените # любой # моноширинный # шрифт(в
# котором # все # символы # имеют # одинаковую # ширину).
# разделение по столбцу
# rus_lower = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'
# for x in range(11):
#     print('^' * 27)
#     for i in rus_lower:
#         if rus_lower.index(i) % 11 == x:
#             print('| ', i.upper(), i, ' |', end='')
#     print()
# print('^' * 27)
# a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# for x in range(2):
#     print('*' * 25)
#     for i in a:
#         if a.index(i) % 2 == x:
#             print('#', i, '#', end='')
#     print()
# print('*' * 25)

# Для идентификации своего круга проверенных лиц будущий тайный агент (ведь все о чем-то мечтают)
# Максим решил пускать на свою страничку в Интернете только тех, чьи никнеймы есть в его секретном списке.
# Он уверен в своих людях (особенно в том, что они по глупости не расскажут никому своё секретное прозвище),
# как и в том, что имена товарищей невозможно подобрать случайно.
#
# К слову, вот этот список: Мавпродош, Лорнектиф, Древерол, Фиригарпиг, Клодобродыч.
# По мере увеличения круга знакомых Максим, естественно, дополнит данный список.
#
# Ваша задача такова: повторите код, который будет спрашивать у пользователя его ник и
# либо пускать на сайт (выведется сообщение «Ты – свой. Приветствую, любезный {НИК_ПОСЕТИТЕЛЯ}!»),
# либо нет (в этом случае будет такой текст: «Тут ничего нет. Еще есть вопросы?».
# Фактически, будущий супергерой решил поиздеваться над теми,
# кого нет в его удивительном перечне, так как им будет показываться это сообщение постоянно.
# Очень коварный замысел!).
#
# Для проверки прозвищ посетителей используйте встроенную функцию input().

# a = ['Мавпродош', 'Лорнектиф', 'Древерол', 'Фиригарпиг', 'Клодобродыч']
# while True:
#     x = input('')
#     if x not in a:
#         print('Тут ничего нет. Еще есть вопросы?')
#     else:
#         print(f'Приветствую, любезный {x}')

# a = ['Мавпродош', 'Лорнектиф', 'Древерол', 'Фиригарпиг', 'Клодобродыч']
# x = input('nik:')
# while x not in a:
#     print('Тут ничего нет. Еще есть вопросы?')
#     x = input('nik:')
# else:
#         print(f'Приветствую, любезный {x}')


# Валентина прогуляла лекцию по математике.
# Преподаватель решил подшутить над нерадивой студенткой и
# попросил ее на практическом занятии перечислить все положительные делители некоторых целых чисел.
# Для несложных примеров студентка быстро нашла решения
# (для числа 6 это: 1, 2, 3, 6; а для числа 16 это: 1, 2, 4, 8, 16), но этим все не закончилось.
# На домашнее задание ей дали варианты посложнее: 23436, 190187200, 380457890232.
#
# Решить такое вручную, как вы понимаете, практически нереально.
# Вот Валентина и обратилась к вам за помощью.
# Помогите ей (при помощи функции all_divisors(number)).
# Постарайтесь найти самое оптимальное решение.
# Результат представьте в виде списка (не забудьте отсортировать по возрастанию).
# a = """Lorem ipsum dolor sit amet,
# consectetur adipiscing elit,
# sed do eiusmod tempor incididunt
# ut labore et dolore magna aliqua."""
# print(a)
a = '└─────┴──────────────────┘'
print(f'{10} { 15444} {a:>50}')