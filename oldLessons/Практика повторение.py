# ДЗ:
# Все числа вводим с клавиатуры.
# 1. Дано расстояние s в сантиметрах. Найти количество полных метров в нем (1 метр = 100 см).
# s = int(input('Введите расстояние: '))
# print(s // 100 )


# 2. Дана сторона квадрата a. Найти его периметр P = 4*a. Найти его площадь S = a**2.
# a = int(input('Сторона квадрата: '))
# print('P =', a * 4)
# print('S =', a ** 2)


# 3. Даны два различных числа. Вычесть из большего числа меньшее и выдать разницу чисел.
# a = 10
# b = 15
# print(a - b if a > b else b - a)

# 4. Даны три числа: 2 положительных и одно отрицательное. Выдать произведение положительных чисел.
# a = 5
# b = 3
# c = -1
# if a < 0:
#     print(b * c)
# elif b < 0:
#     print(a * c)
# else:
#     print(a * b)


# 5. Даны два числа не равные нулю. Если оба числа положительные, то выдать их сумму, если оба числа отрицательные,
# то выдать их произведение, если числа положительное и отрацительное,
# то выдать квадрат положительного числа (number**2).

# a = 5
# b = 6
# if a > 0 and b > 0:
#     print(a + b)
# elif a < 0 and b < 0:
#     print(a * b)
# elif a > 0 and b < 0:
#     print(a ** 2)
# else:
#     print(b ** 2)
#
# ДЗ:
# 1. Даны три переменные: A, B, C. Если их значения упорядочены по возрастанию или убыванию,
# то удвоить их; в противном случае заменить значение каждой переменной на 0.
# Вывести новые значения переменных A, B, C.
# a = 10
# b = 15
# c = 3
# if a > b > c or a < b < c:
#     a = a * 2
#     b = b * 2
#     c = c * 2
#     print(a, b, c)
# else:
#     a = 0
#     b = 0
#     c = 0
#     print(a, b , c)

#
# 2. Напишите простой калькулятор, который считывает с пользовательского ввода три строки: первое число, второе число и операцию,
# после чего применяет операцию к введённым числам ("первое число" "операция" "второе число") и выводит результат на экран. Поддерживаемые операции: +, -, /, *.
# Если выполняется деление и второе число равно 0, необходимо выводить строку "Деление на 0!".
# Пример:
# 2
# 7
# *
# 14
# while True:
#     a = int(input('введите число: '))
#     b = int(input('введите число: '))
#     c = input('введите знак: ')
#     if c == 'exit':
#         break
#     if c == '+':
#         print(a + b)
#     elif c =='-':
#         print(a - b)
#     elif c == '*':
#         print(a * b)
#     elif c == '/' and b:
#         print(a / b)
#     else:
#         print('Деление на 0!')

# 1. Даны две переменные A и B. Если их значения не равны, то присвоить каждой переменной большее из этих значений,
# а если равны, то присвоить переменным ноль. Вывести новые значения переменных A и B.
# a = 17
# b = 17
# if a > b:
#     b = a
# elif a == b:
#     a, b = 0, 0
# else:
#     a = b
#
# print(a, b)

# a = int(input('введите число: '))
# b = int(input('введите число: '))
# if a > b:
#     b = a
# elif a < b:
#     a = b
# else:
#     a, b = 0, 0
# print(a, b)

# 2. Дано число 0 < n < 10. Вывести верно фразу "На лугу пасётся ", n "корова/коровы/коров".

# n = int(input('num: '))
# c = ''
# if n == 1:
#     c = 'a'
# elif 1 < n < 5 :
#     c = 'ы'
#
# print('на лугу', n, 'коров' + c)


# a = int(input('введите число: '))
# c = ''
# if a == 1:
#     c = 'а'
# elif 1 < a < 5:
#     c = 'ы'
# print("На лугу пасётся " + str(a), "коров" + c)

# ДЗ:
# 1. Дано число a в диапазоне 1-9999.
# Вывести к нему описание чётное/нечётное.
# Вывести к нему описание однозначное/двухзначное/трёхзначное/четырёхзначное.

# a = int(input('num: '))
# print('нечётное' if a % 2 else 'чётное')





# a = int(input('введите число: '))
# c = ''
# # print('четное' if a % 2 == 0 else 'нечетное')
# if a < 10:
#     c = 'одно'
# elif a < 100:
#     c = 'двух'
# elif a < 1000:
#     c = 'трех'
# else:
#     c = 'четырех'
# print(c + 'значное')
# 2. Дано натуральное число a из n цифр. Вывести к нему описание "Это n-значное число".
# a = input('введите число: ')
# print('Это', str(len(a)) + '-значное число')

# 3. Введите текст, слово для поиска и слово замены.
# Программа проверяет, существует ли искомое слово.
# Если да, заменяет это слово заменяющим словом(слово замены) и перепечатывает текст,
# в противном случае он уведомляет вас, что искомое слово не найдено и замены нет.
# a = 'сегодня прекрасный день'
# b = 'оооо'
# c = 'pfdnhf'
# if b in a:
#     a = a.replace(b, c)
#     print(a)
# else:
#     print('Замены нет')




# if b in a:
#     a = a.replace(b, 'завтра')
#     print(a)
# else:
#     print('искомое слово не найдено и замены нет')

# ДЗ, со строками.
garden = 'В нашем саду растут 20 яблонь и 15 груш.'
# 1. Заменить 20 на 35.
# print(garden.replace('20', '35'))
# 2. Поменять местами "яблонь" и "груш" используя replace.
# print(garden.replace("груш", "яблонь").replace("яблонь", "груш", 1 ))

# 3. Поменять местами "яблонь" и "груш", используя split и join.
# b = ''
# for i in garden.split():
#     if i == 'яблонь':
#         i = 'груш'
#     elif i == 'груш.':
#         i = 'яблонь.'
#     b += i + ' '
# print(b)
# garden = garden.split()
# garden[5], garden[-1] = garden[-1].strip('.'), garden[5]+'.'
# print(' '.join(garden))


# 4. В переменную мы получаем наше предложение garden. Нужно вывести  суммарное количество деревьев в саду.
# Цифры могут быть многозначными.

# print(sum(int(i) for i in garden.split() if i.isdigit()))



# ДЗ:
# 0. Дано двузначное число. Вывести вначале его левую цифру (десятки), а затем — его правую цифру (единицы).

# a = 25
# print(a % 10, a // 10)




# a = 14
# print(a // 10, a % 10)
# print(a % 10)
# 1. Дано двузначное число вида ab. Вывести квадрат числа ba (ba**2)
# a = 37
# print(int(str(a % 10) + str(a // 10)) ** 2 )

# a = 17
# print((a % 10 * 10 + a // 10) ** 2)
#
# 2. Квадратное уравнение имеет вид ax2 + bx + c = 0 на вход в переменную stroka мы получаем от
# пользователя уравнение, выдать значение коэффициентов a, b, c. Учитываем, что они могут быть многозначными.
# Например: stroka = '6x2 - 12x + 10 = 0'  -> a = 6  b = -12  c = 10

# a = '-6x2 - 12x + 10 = 0'
# a = a.replace('x2', '').replace('x', '')
# a = a.split()
# print(a[0])
# print(int(a[1] + a[2]))
# print(int(a[3] + a[4]))
# for i in a.replace('x2', 'x').replace('x', '').split():
#     if i.isdigit():
#         print(i)


# stroka = '-6x2 - 12x - 10 = 0'
# stroka = stroka.replace('x2', '').replace('x', '')
# stroka= stroka.split()
# print(stroka)
# print(int(stroka[0]), int(stroka[1] + stroka[2]), int(stroka[3] + stroka[4]))


# 3. Решить уравнение ax+b=0. Мы получает от пользователя уравнение. Решите его и выведите целое значение x.
# Вывод должен быть именно в формате: "х=значение".
# Примеры:
# text = '2x+6=0'  ->  x=-3
# text = '-12x+24=0'  -> x=2
# text = '4x-100=0' -> x=25
# a = '2x+6=0'
# b = int(a[a.index('x') + 1:a.index('=')])
# c = int(a[:a.index('x')])
# print('x=' + str(int(b/c/-1)))

# a = '4x-100=0'
# b = int(a[: a.index('x')])
# c = int(a[a.index('x') + 1: a.index('=0')])
# print('x=' + str(-int(c / b)))

# ДЗ:
# 1. Дано целое число. Посчитать количество нулей в числе.
# 1002 -> 2
# 50 -> 1
# 0020 -> 1

# a = '50'
# print(a.lstrip('0').count('0'))


# a = '0020'
# print(a.lstrip('0').count('0'))

# 2. Дано целое число. Посчитать количество нулей в начале числа.
# 107 -> 0
# 0002001 -> 3
# 0 -> 1

# a = '0002001'
# print(len(a) - len(a.lstrip('0')))
# 3. Дано целое число. Посчитать количество нулей в конце числа.
# 401 -> 0
# 8007000 -> 3
# 0 -> 1
# a = '0'
# print(len(a) - len(a.rstrip('0')))

# 4. Пользователь вводит слово. Поменять местами первую и последнюю буквы. слива -> аливс
#
# a = 'слива'
# print(a[-1] + a[1:-1] + a[0])





# a = 'слива'
# print(a[-1] + a[1:-1] + a[0])

# 5. Пользователь вводит: "Фамилия Имя Отчество" - преобразовать в Фамилия инициалы: Иванов петр игоревич -> Иванов П.И.
# a = 'Иванов петр игоревич'
# a = a.split()
# print(a[0], a[1][0].upper() + '.' + a[2][0].upper() + '.')


# a = a.title().split()
# print(a[0], a[1][0] + '.', a[2][0] + '.')

# 6. Исходные данные - время отправления и время прибытия автобуса. Найдите продолжительность поездки на автобусе.
# Вы можете рассчитывать, что вся поездка будет в течение одних суток. Дайте ответ в часах и минутах.
# '5:50, 7:40'  ->  '1:50'

# ДЗ, работа со списком:
# Есть произвольный список целых чисел:

# spisok = [15, 6, 17, 480, 9]
# 1. Посчитать сумму крайних элементов в списке.
# print(spisok[0] + spisok[-1])
# 2. Посчитать разницу между максимальным и минимальным элементом списка.
# print(max(spisok) -min(spisok))
# 3. Посчитать количество знаков в максимальном элементе.
# print(len(str(max(spisok))))
# 4. Посчитать сумму элементов чётных позиций списка.
# print(sum(spisok[1:: 2]))
# 5. Посчитать квадрат центрального элемента в списке.
# print(spisok[(len(spisok) // 2)] ** 2)
#
# ДЗ:
# 1. Дан текст. Отредактировать его так, чтобы текст превратился в предложение, т.е. начинался с большой буквы и
# заканчивался точкой.
# Примеры:
# "greetings, friends" -> "Greetings, friends."
# "Greetings, friends" -> "Greetings, friends."
# "Greetings, friends." -> "Greetings, friends."
# "welcome to New York" -> "Welcome to New York."

# a = "Greetings, friends."
# print(a[0].upper() + a[1:].strip('.') + '.')

# a = "welcome to New York".rstrip('.')
# print(a[0].upper() + a[1:] + '.')
#
# 2. У учителя есть шоколадка размером n x m кусочков. Учитель решил, распределит шоколадку справедливо,
# и каждому ученику будет дано одинаковое количество кусочков, а оставшееся останется у него.
# Может произойти, что от шоколадки ничего не останется,
# но ученики очень добросовестны, поэтому, если у учителя не будет кусочка,
# а у учеников будет больше одного, тогда каждый отдаст по одному своему кусочку,
# но если у учеников есть только один кусочек, тогда учителю ничего не дадут.
# Если шоколадка слишком маленькая для деления между всеми учениками,
# то деления не будет и всё останется у учителя.
# Зная количество учеников s, размер шоколада n, m, распечатайте, сколько
# кусочков получит каждый ученик и учитель. Данные приведены в следующем порядке: n, m, s.
# Вывод должен быть в виде: У учителя X плиток, у ученика Y плиток.
#
# ДЗ:
# В переменной chess мы получаем какой-то любой фрагмент шахматной партии.
# Например:
# chess = '1. d2 e6 2. e4 d5 3. Кc3 c5 4. Кf3 O-O 5. e:d5 e:d5 6. Сe2 Кf6 7. O-O Сe7 8. Сg5 Кc6 9. d:c5 Сe6 10. Кd4 С:c5 11. Кb3 Сe7 12. Сf3 Кe5 13. Лe1 К:f3+ 14. Ф:f3 Лc8 15. h3 h6'
# 0. Распечатать первый ход партии: 1. d2 e6   Найти как можно больше решений.
# print(chess.split('2.')[0])
# print(chess[:chess.index('2.')])

# 1. Подсчитать сколько раз в партии ходили слонами.

# print(chess.count('С'))

# 2. Если в партии было больше ходов слонами, чем ладьями - напечатать "Слоны были активнее", если ладьями,

# if chess.count('Л') > chess.count('С'):
#     print('Л')
# else:
#     print("c")

# 3. Распечатать на каком ходу у белых была короткая рокировка: O-O.
# print(chess.split('. O-O')[0][-1])


# 4. Распечатать на каком ходу у чёрных была короткая рокировка: O-O.
# chess = chess.split()
# print(chess)
# print(chess[2::3])
# print()
#
# ДЗ, работа со списком:
# a = [15, 6, 171, 48, 9, 7, 12, 90]
# 1. Вывести общую сумму двух первых и двух последних элементов списка.

# print(sum(a[:2] + a[-2:]))
# print(sum(a[:2] + a[-2:]))
# 2. Если сумма элементов на чётных позициях больше, вывести "Чётные победили", если на нечётных - "Нечётные победили".
# print(a[::2])
# print(a[1::2])
# print('no' if sum(a[::2]) > sum(a[1::2]) else 'yes')

# if sum(a[1::2]) > sum(a[::2]):
#     print("Чётные победили")
# else:
#     print("Нечётные победили")
# print("Чётные победили"  if sum(a[1::2]) > sum(a[::2]) else "Нечётные победили")
# 3. Переставить последний элемент списка на первое место и вывести новый список.
# print([a.pop()] + a)
# a.insert(0, a.pop())
# print(a)
# a.insert(0, a.pop())
# print(a)
# a.insert(2, 8)  # вставляет элемент 8 на индекс 2
# Использовать только функции работы со списком без слайсов.
# 4. C клавиатуры вводим через пробел 3 целых числа.
# Напишите программу, которая выводит в три строки: сначала максимальное, потом минимальное, после чего оставшееся число.
# ДЗ на множества:
# 1. Ребёнку нужно из кубиков с буквами сложить предложение "мама мыла раму".
# Какие кубики с буквами ему понадобятся? (кубика "пробел" не существует)
# a = 'мама мыла раму'.replace(' ', '')
# print(set(a))
# a = 'мама мыла раму'
# a = set(a.replace(' ', ''))
# print(a)

# 2. В школе десятибальная система. У Егора за эту неделю были такие оценки [3, 4, 7, 5, 1, 5, 9, 2, 9, 10].
# Напечатать каких оценок у него не было.
# a = [3, 4, 7, 5, 1, 5, 9, 2, 9, 10]
# print(*set(range(1, 11)).difference(a))
# b = set(range(1, 11))
# print(*b.difference(a))

# 3. Егор любит ходить в лес. В первую неделю он был в лесу в такие дни ['пн', 'ср', 'чт', 'вс'],
# во вторую неделю ['вт', 'ср', 'чт', 'сб'], а в третью ['пн', 'ср', 'пт', 'вс'].
# Найти любимый день недели Егора для похода в лес.
# a = ['пн', 'ср', 'чт', 'вс']
# print({'пн', 'ср', 'чт', 'вс'}.intersection({'вт', 'ср', 'чт', 'сб'}).intersection({'пн', 'ср', 'пт', 'вс'}))

# print(set(a).intersection(b).intersection(c))

#
# ДЗ:
# 1. Определить является ли предложение палиндромом (читается одинаково в обоих направлениях).
# Пример:
# text = 'А роза упала на лапу Азора' -> Это палиндром
# text = 'Роза упала' -> Это не палиндром

# a = 'Роза упала'
# print('polindrom' if a.replace(' ', '').lower()[::-1] == a.replace(' ', '').lower() else 'not' )
# a = a.replace(' ', '')
# print('палиндром' if a.lower() == a[::-1].lower() else 'не палиндром')

#
# 2. Пользователь вводит слово. Поменять местами первую и последнюю буквы.
# слива -> аливс
# a -> a
# '' -> ''
# a = 'ab'
# print(a[-1] + a[1:-1] + a[0] if len(a) > 1 else a)


# print(a[-1] + a[1:-1] + a[0] if len(a) > 1 else a)

# ДЗ, работа со словарём:
# 1. Данны данные по средним температурам в неделю трёх месяцев лета.
# a = {
#     'Июнь': [20, 22, 24, 28],
#     'Июль': [24, 25, 29, 32],
#     'Август': [25, 28, 31, 29]}
# 1. Вывести температуру первой недели лета.

# print(a['Июнь'][0])

# print(a['Июнь'][0])

# 2. Вывести максимальную температуру в июне.
# print(max(a['Июнь']))
# print(max(a['Июнь']))

# 3. Вывести минимальную температуру в июле.
# print(min(a['Июль']))

# print(min(a['Июль']))

# 4. Вывести максимальную температуру лета.

# print(max(max(a['Июнь']), max(a['Июль']), max(a['Август'])))
# print(max(max(a[i]) for i in a))

# print(max(max(a[i])for i in a))

# 5. Сравнить какой месяц был самый жаркий и вывести его название(суммировать температуры каждого месяца).

# for i in a:
#     if max(sum(a[i]) for i in a) == sum(a[i]):
#         print(i)

# a1 = {
#     'Июнь':[sum(a['Июнь'])],
#     'Июль':[sum(a['Июль'])],
#     'Август':[sum(a['Август'])]
# }
# print(max(a, key=a.get))
# 2. Единицы массы пронумерованы следующим образом: 1 — грамм, 2 — килограмм, 3 — центнер, 4 — тонна. Дан номер единицы массы n
# (целое число в диапазоне 1–4) и масса тела m в этих единицах (вещественное число). Найти массу тела в килограммах.
#
# n=3 m=12 -> Масса равна 1200.0 кг
# n=1 m=100 -> Масса равна 0.1 кг
#
# ДЗ:
# 0. Сколько чисел в интервале от 100 до 200, которые делятся на 17 без остатка?
# for i in range(100, 200):
#     if i % 17 == 0:
#         print(i)
# 1. Мы получаем список от пользователя вида spisok = [5, 0, -1, 3, -2, 10, -12, 20, 7]. Вывести все положительные числа
# кратные 5 через запятую.
# a = [5, 0, -1, 3, -2, 10, -12, 20, 7]
#
# print(*[i for i in a if i > 0 and i % 5 == 0], sep= ', ')

# 2. Мы получаем список от пользователя вида spisok = [5, 0, -1, 3, -2]. Вывести наименьшее положительное число в списке.
# a = [5, 0, -1, 3, -2]
# print(min(i for i in a if i > 0))


# 3. Написать программу, которая находит в списке spisok = [5, 4, -1, 0, -2, 0, 5, 4, 4, 7] число, которое встречается
# наибольшее количество раз.
# a = [5, 4, -1, 0, -2, 0, 5, 4, 4, 7]
# for i in a:
#     print(a.count(i))

# print(max(a, key=a.count))


#
# ДЗ, добавка:
# 1. У нас есть журнал оценок группы:
# magazine = {
#     'Иванов': [3, 7, 11, 10, 8],
#     'Петров': [6, 12, 4, 9, 9],
#     'Сидоров': [5, 10, 7, 5, 9]}
# # Вывести "Лучший ученик Х, у него максимальный бал Y, минимальный бал Z"
# a = max(magazine, key=magazine.get)
# print(a, max(magazine[a]), min(magazine[a]))


# ПОЧЕМУ key=magazine.get СУММИРУЕТ ПО КАКОМУ ПРИНЦИПУ ОН РАБОТАЕТ???



#magazine1 = {'Иванов': sum(magazine['Иванов']), 'Петров': sum(magazine['Петров']), 'Сидоров': sum(magazine['Сидоров'])}
# a = max(magazine1, key= magazine1.get, )
# print(a, max(magazine[a]), min(magazine[a]))

# 2. Написать программу которая подсчитывает количество цифр в строке "Олимпиада в Сочи была в 2014 году" и их сумму.
# Вывод должен быть "В строке цифр: X, сумма этих цифр: Y"

# a = "Олимпиада в Сочи была в 2014 году"
# b = tuple(int(i) for i in a if i.isdigit())
# print(sum(b), len(b))

# #a = "Олимпиада в Сочи была в 2014 году"
# b = [int(i)for i in a if i.isdigit()]
# print(sum(b), len(b))

#
# ДЗ:
# 1. Даны два целых числа A и B (A < B). Найти сумму квадратов всех чисел от A до B включительно.
# a = 5
# b = 10
# print(sum(i ** 2 for i in range(a, b)))


#a = 5
# b = 10
# c = range(a, b)
# print(sum(i ** 2 for i in c))

# 2. Даны целые положительные числа A и B (A < B). Вывести все целые числа от A до B включительно; при этом каждое число должно
# выводиться с новой строки столько раз, каково его значение.
# Например:
# a = 2
# b = 4
# 22
# 333
# 4444
# a = 5
# b = 10
# for i in range(a, b):
#     print(str(i) * i)


# a = 1
# b = 10
# c = range(a, b)
# print(*[str(i) * i for i in c], sep='\n')


# 3. У нас есть колода карт с мастями (♥♦♠♣) и карты от шестёрки до туза. Сформировать колоду вида: 6♦, 6♥, 6♠, 6♣ ... Т♣.
# Перемешать её и вывести первые случайные 6 карт.
# masti = '♥♦♠♣'
# number = ['6', '7', '8', '9', '10', 'В', 'Д', 'К', 'Т']
# Можно ли решить задачу в одну строку?
# a = ['6', '7', '8', '9', '10', 'В', 'Д', 'К', 'Т']
# b = '♥♦♠♣'
# c = [i+j for i in a for j in b]
# print(*list(set(c))[:5])

#
# 4. Пользователь через пробел вводит целые числа в диапазоне [-20;20]. Найти произведение тех чисел, которые находятся в
# диапазоне [2;10], если таких чисел нет - вывести "-1".
# Пример:
# 13 -1 0 1   -> -1
# 3 4 14 -1   -> 12
# a = input(': ').split()
# b = 1
# for i in a:
#     i = int(i)
#     if 1 < i < 10:
#         b *= i
# if b == 1:
#     print(-1)
# else:
#     print(b)


# for i in a:
#     i = int(i)
#     if 1 < i < 10:
#        c *= i
# print(-1 if c == 1 else c)

# 5. Вывести на экран таблицу умножения (от 1 до 10).

# for i in range(1, 11):
#     for j in range(1, 10):
#         print(f'{i:>2} x {j:>2} = {i * j:>2}', end=' ')
#     print()

# for i in range(1, 11):
#     for j in range(1, 11):
#         print(f'{j:>2} x {i:>2} = {i * j:>2}', end=' ')
#     print()
#
# for x in range(2):
#     for i in range(1, 11):
#         for j in range(1, 6):
#             print(f'{j + x * 5:>2} x {i:>2} = {i * j:>2}', end='   ')
#         print()
#     print()
#  ДЗ на while:
# 1. Пользователь вводит по одному либо названия фруктов, либо целые числа. Стоп-слово - exit.
# Вывести в результате сумму чисел и список фруктов.
# b = []
# c = 0
# while True:
#     a = input(': ')
#     if a == 'exit':
#         break
#     if a.isdigit():
#         c += int(a)
#     else:
#         b.append(a)
# print(b)
# print(c)




# a = []
# b = 0
# while True:
#     c = input('введите данные: ')
#     if c == 'exit':
#         break
#     if c.isdigit():
#         b += int(c)
#     else:
#         a.append(c)
# print(a, b)

# 2. Напишите программу, которая считывает с клавиатуры по одному числа до тех пор,
# пока сумма введённых чисел не будет равна 0 и сразу после этого выводит сумму квадратов всех считанных чисел.
# b = 0
# c = 0
# while True:
#     a = int(input(': ' ))
#     b += a
#     c += a ** 2
#     if b == 0:
#         break
# print(c)


# a = 0
# c = 0
# while True:
#     b = int(input('Введите число:'))
#     a += b
#     if a == 0:
#         break
#     c += b ** 2
# print(c)

# 3. Пользователь вводит по одному числа. Стоп-слово "exit". Найти какая сумма больше чётных чисел или нечётных.
# b = 0
# c = 0
# while True:
#     a = input('Введите число: ')
#     if a == 'exit':
#         break
#     a = int(a)
#     if a % 2:
#         b += a
#     else:
#         c += a
# print('нечётных больше' if b > c else 'чётных больше')

# 0. Дано число n. Найти сумму S = 1**1 + 2**2 + ... + n**n
# n = int(input('num:'))
#
# print(sum(i * i for i in range(1, n + 1)))

# n = int(input('Введите число'))
# a = range(1, n + 1)
# print(sum(i ** i for i in a))

# n = int(input('Введите число'))
# a = range(1, n + 1)
# print(sum(i ** i for i in a), '=', ' + '.join([str(i ** i) for i in a]))
# n = 5
# a = [i ** i for i in range(1, n + 1)]
# print(sum(a), '=', ' + '.join([str(i) for i in a]))

# 1. 5 рабочих выполняли определённую задачу. Время потраченное каждым из них мы получили в формате [часы, минуты, секунды].
# workers = {
#     1: [1, 10, 30],
#     2: [0, 20, 0],
#     3: [3, 35, 50],
#     4: [1, 40, 10],
#     5: [2, 10, 30]}
# # Посчитать общее затраченное время всеми рабочими и вывести его в секундах.

# print(sum(workers[i][0] * 360 + workers[i][1] * 60 + workers[i][2]  for i in workers))

# a = []
#
# a = []
# for i in workers:
#     a.append(workers[i][0] * 60 * 60)
#     a.append(workers[i][1] * 60 )
#     a.append(workers[i][2])
# print(sum(a))

# 2. Дано число n. Подсчитать количество отверстий в цифрах в данном числе. Можно ли решить задачу в одну строку?
# Пример:
# n = '16826'
# Отверстий: 6
# print(n.count('0') + n.count('6') + n.count('8') * 2 + n.count('9'))
# c = 0
# for i in [0, 6, 8, 9]:
#     if i == 8:
#         c += n.count(str(i)) * 2
#     else:
#         c += n.count(str(i))
# print(c)

# print(int(n.count('0')) + int(n.count('6')) + int(n.count('8'))*2 + int(n.count('9')))

# 3. Пользователь вводит по одному числа. Стоп-слово "exit". Найти какая сумма больше чётных чисел или нечётных.
# b = 0
# c = 0
# while True:
#     a = input('num: ')
#     if a == 'exit':
#         break
#     if int(a) % 2:
#         b += 1
#     else:
#         c += 1
# if c > b:
#     print('четные')
# else:
#     print('нечетные')

# Найти совершенные числа. Найти все совершенные числа до 1000.
# Совершенное число - это такое число, которое равно сумме всех своих делителей, кроме себя самого.
# Например, число 6 является совершенным, т.к. кроме себя самого делится на числа 1, 2 и 3, которые в сумме дают 6.
# for i in range(1, 1000):
#     a = 0
#     for j in range(1, i):
#         if i % j == 0:
#             a += j
#     if a == i:
#         print(a)

# 3. Пользователь с клавиатуры вводит целые числа по одному, количество введённых чисел неизвестно,
# ввод чисел заканчивается числом 0 (0 – признак окончания ввода, не входит в последовательность).
# Программа должна вывести два числа: длину последовательности (завершающий 0 не учитывается)
# и количество нечётных чисел, кратных 3.
# c = 0
# b = 0
# while True:
#     a = int(input('num: '))
#     if a == 0:
#         break
#     b += 1
#     if a % 2 and a % 3 == 0:
#         c += 1
# print(b, c)

# 4. Простейшая система проверки орфографии может быть основана на использовании списка известных слов.
# Если введённое слово не найдено в этом списке, оно помечается как "ошибка".
# Попробуем написать подобную систему.
# На вход программе первой строкой передаётся количество d известных нам слов,
# после чего на d строках указываются эти слова.
# Затем передаётся количество s строк текста для проверки, после чего s строк текста.
# Выведите уникальные "ошибки" в произвольном порядке. Работу производите без учёта регистра.
# d = int(input('word: '))
# c = []
# for i in range(d):
#     b = input('text:').lower()
#     c.append(b)
# print(c)
# s = int(input('num proverka: '))
# j = []
# for i in range(s):
#     k = input('text:').lower()
#     j.append(k)
# print(j)
# l = []
# for i in j:
#     for h in i.split():
#         if h not in c:
#             l.append(h)
# print(*set(l), sep='\n')



# Sample Input:
# 4
# champions
# we
# are
# Repik
# 3
# We are the champignons
# We Are The Champions
# Repic
#
# Sample Output:
# repic
# champignons
# the