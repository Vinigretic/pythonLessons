
# a = float(input('numb: '))
# print(a)
# print(round(a))
# print(round(a, 2))  # второй параметр указывает сколько чисел оставлять после запятой

# a = 1
# b = 10
# a, b = b, a

# 1) Тимофей обычно спит ночью X часов и устраивает себе днем тихий час на Y минут. Определите, сколько всего минут Тимофей
# спит в сутки.
# x = int(input('ночные часы :'))
# y = int(input('дневные минуты :'))
# print(x * 60 + y)

# 2) Коля каждый день ложится спать ровно в полночь и недавно узнал, что оптимальное время для его сна составляет X минут.
# Коля хочет поставить себе будильник так, чтобы он прозвенел ровно через минут после полуночи, однако для этого необходимо
# указать время сигнала в формате часы, минуты. Помогите Коле определить, на какое время завести будильник.
# x = int(input('time: '))
# print(int(x / 60), ':', int(x % 60))

# 3) Напишите программу, которая получает на вход три целых числа, по одному числу в строке, и выводит на консоль в три строки
# сначала максимальное, потом минимальное, после чего оставшееся число.

# a = int(input('num1: '))
# b = int(input('num2: '))
# c = int(input('num3: '))
# d = [a, b, c]
# print(max(d))
# print(min(d))
# print(sorted(d)[1])

# 1) Паша очень любит кататься на общественном транспорте, а получая билет, сразу проверяет, счастливый ли ему попался.
# Билет считается счастливым, если сумма первых трех цифр совпадает с суммой последних трех цифр номера билета.
# Однако Паша очень плохо считает в уме, поэтому попросил вас написать программу, которая проверит равенство сумм и выведет
# "Счастливый", если суммы совпадают, и "Обычный", если суммы различны.
# На вход программе подаётся строка из шести цифр.

# a = input('Билет:')
# b = []
# for i in a:
#     b.append(int(i))
# if sum(b[:3]) == sum(b[3:]):
#     print('Счастливый')
# else:
#     print('Обычный')

# 2) Напишите программу, которая считывает со стандартного ввода целые числа, по одному числу в строке, и после первого
# введенного нуля выводит сумму полученных на вход чисел.

# b = 0
# while True:
#     a = int(input('num: '))
#     if a == 0:
#         break
#     b += a
# print(b)

# 3) В Институте биоинформатики между информатиками и биологами устраивается соревнование. Победителям соревнования достанется
# большой и вкусный пирог. В команде биологов a человек, а в команде информатиков — b человек.
# Нужно заранее разрезать пирог таким образом, чтобы можно было раздать кусочки пирога любой команде, выигравшей соревнование,
# при этом каждому участнику этой команды должно достаться одинаковое число кусочков пирога. И так как не хочется резать пирог на
# слишком мелкие кусочки, нужно найти минимальное подходящее число.
# Напишите программу, которая помогает найти это число.
# Программа должна считывать размеры команд (два положительных целых числа a и b, каждое число вводится на отдельной строке) и
# выводить наименьшее число d, которое делится на оба этих числа без остатка.
# Sample Input 1:
#
# 1
# 2
#
# Sample Output 1:
#
# 2
#
# Sample Input 2:
#
# 7
# 5
#
# Sample Output 2:
#
# 35
#
# Sample Input 3:
#
# 15
# 15
#
# Sample Output 3:
#
# 15
# a = int(input('num: '))
# b = int(input('num: '))
# c = []
# for i in range(min(a, b), a * b + 1):
#     if i % a == 0 and i % b == 0:
#         c.append(i)
# print(c[0])

# 1) GC-состав является важной характеристикой геномных последовательностей и определяется как процентное соотношение суммы
# всех гуанинов и цитозинов к общему числу нуклеиновых оснований в геномной последовательности.
# Напишите программу, которая вычисляет процентное содержание символов G (гуанин) и C (цитозин) в введенной строке
# (программа не должна зависеть от регистра вводимых символов).
# Например, в строке "acggtgttat" процентное содержание символов G и C равно 4/10⋅100=40.0 где 4 -- это количество
# символов G и C,  а 10 -- это длина строки.
# a = input().upper()
#
# print((a.count('G') + a.count('C')) / 10 * 100)

# Напишите программу, на вход которой подаётся список чисел одной строкой. Программа должна для каждого элемента этого
# списка вывести сумму двух его соседей. Для элементов списка, являющихся крайними, одним из соседей считается элемент,
# находящий на противоположном конце этого списка. Например, если на вход подаётся список "1 3 5 6 10", то на выход
# ожидается список "13 6 9 15 7" (без кавычек).
# Если на вход пришло только одно число, надо вывести его же.
# Вывод должен содержать одну строку с числами нового списка, разделёнными пробелом.

# Sample Input 1:
#
# 1 3 5 6 10
#
# Sample Output 1:
#
# 13 6 9 15 7
#
# Sample Input 2:
#
# 10
#
# Sample Output 2:
#
# 10

# a = '10'.split()
# b = []
# if len(a) == 1:
#     print(*a)
# else:
#     for i in range(len(a) - 1):
#         b.append(int(a[i - 1]) + int(a[i + 1]))
#     b.append(int(a[-2]) + int(a[0]))
#     print(*b)

# a = '10'.split()
# b = []
# if len(a) == 1:
#     print(*a)
# else:
#     for i in range(len(a) - 1):
#         print(int(a[i - 1]) + int(a[i + 1]), end=' ')
#     print(int(a[-2]) + int(a[0]))











